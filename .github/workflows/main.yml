name: VtuberMusic-UWP 构建和发布

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:

  build:
  
    runs-on: windows-latest # 别动

    env:
      Solution_Name: VtuberMusic-UWP # 解决方案的名称
      Wap_Project_Directory: .\VtuberMusic-UWP # 生成项目名称

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
        
    # # 缓存 obj
    # - name: Cache Obj
    #   uses: actions/cache@v2.1.6
    #   env:
    #       cache-name: cache-obj
    #   with:
    #       path: .\VtuberMusic-UWP\obj
    #       key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ github.run_number }}
    #       restore-keys : ${{ runner.os }}-build-${{ env.cache-name }}-

    # 安装 .NET Core 环境
    - name: Install .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x

    # 添加 MSBuild 到环境变量
    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v1.0.2

    # 还原应用安装依赖
    - name: Restore the application
      run: msbuild $env:Solution_Name /t:Restore /p:Configuration=$env:Configuration
      env:
        Configuration: ${{ matrix.configuration }}

    # 解密 pfx 证书
    - name: Decode the pfx
      run: |
        $pfx_cert_byte = [System.Convert]::FromBase64String("${{ secrets.Base64_Encoded_Pfx }}")
        $certificatePath = Join-Path -Path $env:Wap_Project_Directory -ChildPath GitHubActionsWorkflow.pfx
        [IO.File]::WriteAllBytes("$certificatePath", $pfx_cert_byte)

    # 写入 Git 版本号
    - name: Write Git Commit and Date
      run: |
        $Git_Commit = git log -1 --pretty=format:%h
        $Build = ${{ github.run_number }}
        $Info = Get-Content $env:Wap_Project_Directory/Properties/AssemblyInfo.cs
        $Info = $Info -replace "GitCommit",$Git_Commit
        $Info = $Info -replace "Build.Count",$Build
        Set-Content -Path $env:Wap_Project_Directory/Properties/AssemblyInfo.cs -Value $Info
        
    
    # 生成应用并生成包
    - name: Create the app package (x64)
      run: msbuild $env:Wap_Project_Path /p:Configuration=$env:Configuration /p:UapAppxPackageBuildMode=$env:Appx_Package_Build_Mode /p:AppxBundle=$env:Appx_Bundle /p:PackageCertificateKeyFile=GitHubActionsWorkflow.pfx /p:PackageCertificatePassword=${{ secrets.Pfx_Key }}
      env:
        Appx_Bundle: Always
        Appx_Package_Build_Mode: StoreUpload
        Configuration: Release
    
    # 压缩打包应用
    - name: Compress app package
      run:  Compress-Archive -Path ${{ env.Wap_Project_Directory }}\AppPackages -DestinationPath ${{ github.workspace }}\VtuberMusic_UWP_v2.0_pre_${{ github.run_number }}.zip -Force
    
    # 获取提交信息
    - name: Get commit comment
      run: git log --pretty=format:"%s" -1 > commit.txt
    
    # 创建发行版
    - name: Create Release
      uses: ncipollo/release-action@v1.8.6
      with:
        bodyFile: commit.txt
        artifacts: ${{ github.workspace }}\VtuberMusic_UWP_v2.0_pre_${{ github.run_number }}.zip
        commit: main
        tag: v2.0-pre-${{ github.run_number }}
        token: ${{ secrets.GITHUB_TOKEN }}
        prerelease: true
        

    # 不知道为什么会 403,好像超限制了
    #- name: Upload build artifacts
    #  uses: actions/upload-artifact@v2.2.3
    #  with:
    #    name: MSIX Package
    #    path: ${{ env.Wap_Project_Directory }}\AppPackages
