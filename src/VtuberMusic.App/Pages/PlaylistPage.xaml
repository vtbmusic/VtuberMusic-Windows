<Page
    x:Class="VtuberMusic.App.Pages.PlaylistPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:VtuberMusic.App.Pages"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:viewmodels="using:VtuberMusic.App.ViewModels"
    xmlns:models="using:VtuberMusic.Core.Models"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:muxc="using:Microsoft.UI.Xaml.Controls"
    xmlns:controls1="using:VtuberMusic.App.Controls"
    xmlns:dataitem="using:VtuberMusic.App.Controls.DataItem"
    xmlns:controls="using:CommunityToolkit.WinUI.UI.Controls"
    Loaded="{x:Bind PageRoot_Loaded}" Unloaded="{x:Bind PageRoot_Unloaded}"
    mc:Ignorable="d" x:Name="PageRoot">

    <interactivity:Interaction.Behaviors>
        <core:EventTriggerBehavior EventName="Loaded">
            <core:InvokeCommandAction Command="{x:Bind ViewModel.LoadCommand}"/>
        </core:EventTriggerBehavior>
    </interactivity:Interaction.Behaviors>
    <controls1:LoadingCover IsLoading="{x:Bind ViewModel.LoadCommand.IsRunning, Mode=OneWay}">
        <ListView x:Name="MainListView" ItemsSource="{x:Bind ViewModel.PlaylistMusics}" Padding="{StaticResource MusicPlayerHeight}"
                  CanReorderItems="{x:Bind ViewModel.CanEdit,Mode=OneWay}" AllowDrop="{x:Bind ViewModel.CanEdit,Mode=OneWay}"
                  SelectionMode="Extended">
            <ListView.Header>
                <Grid Height="350" CornerRadius="8">
                    <ParallaxView Source="{x:Bind MainListView}"
                              VerticalShift="500">
                        <controls:ImageEx Source="{x:Bind ViewModel.Playlist.coverImgUrl, Mode=OneWay,Converter={StaticResource AddParameterConverter},ConverterParameter='/75'}" Stretch="UniformToFill"
                                      HorizontalAlignment="Center"/>
                    </ParallaxView>
                    <Grid>
                        <Grid.Background>
                            <LinearGradientBrush StartPoint="0,1" EndPoint="1,0">
                                <GradientStop Color="{ThemeResource SystemAltMediumHighColor}" Offset="0"/>
                                <GradientStop Color="{ThemeResource SystemAltLowColor}" Offset="0.5"/>
                                <GradientStop Color="{ThemeResource SystemAltMediumHighColor}" Offset="1"/>
                            </LinearGradientBrush>
                        </Grid.Background>
                        <Grid Margin="25" VerticalAlignment="Bottom">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Grid CornerRadius="8" Shadow="{StaticResource ShareShadow}" Translation="0,0,32"
                          Height="200" Width="330" HorizontalAlignment="Left">
                                <controls:ImageEx Source="{x:Bind ViewModel.Playlist.coverImgUrl, Mode=OneWay,Converter={StaticResource AddParameterConverter},ConverterParameter='/50'}"
                                  Stretch="UniformToFill" Height="200" Width="330"/>
                            </Grid>
                        </Grid>
                        <StackPanel Margin="20" HorizontalAlignment="Right" VerticalAlignment="Bottom">
                            <Grid VerticalAlignment="Top" HorizontalAlignment="Right" Margin="10">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <muxc:PersonPicture ProfilePicture="{x:Bind ViewModel.Playlist.creator.avatarUrl, Mode=OneWay}" Height="40" Width="40"/>
                                <StackPanel Grid.Column="1" Margin="10 0 0 0">
                                    <HyperlinkButton Padding="0" Command="{x:Bind ViewModel.NavigateToProfileCommand}" CommandParameter="{x:Bind ViewModel.Playlist.creator, Mode=OneWay}">
                                        <TextBlock FontWeight="SemiBold" Text="{x:Bind ViewModel.Playlist.creator.nickname, Mode=OneWay}"/>
                                    </HyperlinkButton>
                                    <TextBlock FontSize="12" Foreground="{ThemeResource SystemBaseMediumHighColor}">
                                <Run>创建于</Run>
                                <Run Text="{x:Bind ViewModel.Playlist.createTime, Mode=OneWay, Converter={StaticResource FormatConverter}, ConverterParameter='\{0:yyy/MM/dd HH\\\\:mm\}'}"/>
                                    </TextBlock>
                                </StackPanel>
                            </Grid>
                            <TextBlock Text="{x:Bind ViewModel.Playlist.name, Mode=OneWay}"
                                       FontWeight="Bold" FontSize="24" TextWrapping="Wrap"
                                       HorizontalAlignment="Right" HorizontalTextAlignment="Right"/>
                            <TextBlock Text="{x:Bind ViewModel.Playlist.description, TargetNullValue=无简介, Mode=OneWay}" Margin="0 5"
                                       Foreground="{ThemeResource SystemBaseMediumHighColor}" TextWrapping="Wrap" MaxWidth="350"
                                       HorizontalAlignment="Right" MinHeight="30" HorizontalTextAlignment="Right"/>
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                                <interactivity:Interaction.Behaviors>
                                    <core:DataTriggerBehavior Binding="{x:Bind ViewModel.Subscribed, Mode=OneWay}" Value="True">
                                        <core:ChangePropertyAction TargetObject="{Binding ElementName=FavoriteAppBarButton}" PropertyName="Icon" Value="UnFavorite"/>
                                        <core:ChangePropertyAction TargetObject="{Binding ElementName=FavoriteAppBarButton}" PropertyName="Label" Value="取消收藏"/>
                                    </core:DataTriggerBehavior>
                                    <core:DataTriggerBehavior Binding="{x:Bind ViewModel.Subscribed, Mode=OneWay}" Value="False">
                                        <core:ChangePropertyAction TargetObject="{Binding ElementName=FavoriteAppBarButton}" PropertyName="Icon" Value="Favorite"/>
                                        <core:ChangePropertyAction TargetObject="{Binding ElementName=FavoriteAppBarButton}" PropertyName="Label" Value="收藏"/>
                                    </core:DataTriggerBehavior>
                                </interactivity:Interaction.Behaviors>
                                <AppBarButton Icon="Play" Label="播放" Command="{x:Bind ViewModel.SetCollectionCommand}" CommandParameter="{x:Bind ViewModel.PlaylistMusics, Mode=OneWay}"/>
                                <AppBarButton Icon="Edit" Label="修改" Click="{x:Bind EditPlaylistAppBarButton_Click}" Visibility="{x:Bind ViewModel.CanEdit, Mode=OneWay, Converter={StaticResource VisibilityConvter}}"/>
                                <AppBarButton Icon="Delete" Label="删除" Click="{x:Bind DeletePlaylistAppBarButton_Click}" Visibility="{x:Bind ViewModel.CanEdit, Mode=OneWay, Converter={StaticResource VisibilityConvter}}"/>
                                <AppBarButton x:Name="FavoriteAppBarButton" Icon="Favorite" Label="收藏" Command="{x:Bind ViewModel.SubscribePlaylistCommand}" Visibility="{x:Bind ViewModel.CanSubscribe, Mode=OneWay, Converter={StaticResource VisibilityConvter}}"/>
                                <AppBarButton Icon="Copy" Label="复制链接" Command="{x:Bind ViewModel.CopyLinkCommand}" CommandParameter="{x:Bind ViewModel.Playlist, Mode=OneWay}"/>
                                <AppBarButton Icon="Share" Label="分享" Command="{x:Bind ViewModel.ShareCommand}" CommandParameter="{x:Bind ViewModel.Playlist, Mode=OneWay}"/>
                            </StackPanel>
                        </StackPanel>
                    </Grid>
                </Grid>
            </ListView.Header>
            <ListView.ItemTemplate>
                <DataTemplate x:DataType="models:Music">
                    <dataitem:MusicListItem Music="{x:Bind}" Loaded="MusicListItem_Loaded"/>
                </DataTemplate>
            </ListView.ItemTemplate>
        </ListView>
    </controls1:LoadingCover>
</Page>